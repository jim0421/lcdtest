#include "words.h"
#include "utility.h"
#include <graphics.h>

/////////////////////////////////////////////////////////////////////////
// ºº×Ö×ÖÄ£±í                                                          //
// ºº×Ö¿â: ËÎÌå12.dot,ºáÏòÈ¡Ä£×ó¸ßÎ»,Êý¾ÝÅÅÁÐ:´Ó×óµ½ÓÒ´ÓÉÏµ½ÏÂ         //
/////////////////////////////////////////////////////////////////////////
struct typFNT_GB12 GB_12[] =          // Êý¾Ý±í
{
"0 ",
	0x00,0x00,0x7C,0x00,0xC6,0x00,0xC6,0x00,
	0xCE,0x00,0xD6,0x00,0xD6,0x00,0xE6,0x00,
	0xC6,0x00,0xC6,0x00,0x7C,0x00,0x00,0x00,
"1 ",
	0x00,0x00,0x18,0x00,0x38,0x00,0x78,0x00,
	0x18,0x00,0x18,0x00,0x18,0x00,0x18,0x00,
	0x18,0x00,0x18,0x00,0x7E,0x00,0x00,0x00,
"2 ",
	0x00,0x00,0x7C,0x00,0xC6,0x00,0x06,0x00,
	0x0C,0x00,0x18,0x00,0x30,0x00,0x60,0x00,
	0xC0,0x00,0xC6,0x00,0xFE,0x00,0x00,0x00,
"3 ",
	0x00,0x00,0x7C,0x00,0xC6,0x00,0x06,0x00,
	0x06,0x00,0x3C,0x00,0x06,0x00,0x06,0x00,
	0x06,0x00,0xC6,0x00,0x7C,0x00,0x00,0x00,
"4 ",
	0x00,0x00,0x0C,0x00,0x1C,0x00,0x3C,0x00,
	0x6C,0x00,0xCC,0x00,0xFE,0x00,0x0C,0x00,
	0x0C,0x00,0x0C,0x00,0x1E,0x00,0x00,0x00,
"5 ",
	0x00,0x00,0xFE,0x00,0xC0,0x00,0xC0,0x00,
	0xC0,0x00,0xFC,0x00,0x0E,0x00,0x06,0x00,
	0x06,0x00,0xC6,0x00,0x7C,0x00,0x00,0x00,
"6 ",
	0x00,0x00,0x38,0x00,0x60,0x00,0xC0,0x00,
	0xC0,0x00,0xFC,0x00,0xC6,0x00,0xC6,0x00,
	0xC6,0x00,0xC6,0x00,0x7C,0x00,0x00,0x00,
"7 ",
	0x00,0x00,0xFE,0x00,0xC6,0x00,0x06,0x00,
	0x06,0x00,0x0C,0x00,0x18,0x00,0x30,0x00,
	0x30,0x00,0x30,0x00,0x30,0x00,0x00,0x00,
"8 ",
	0x00,0x00,0x7C,0x00,0xC6,0x00,0xC6,0x00,
	0xC6,0x00,0x7C,0x00,0xC6,0x00,0xC6,0x00,
	0xC6,0x00,0xC6,0x00,0x7C,0x00,0x00,0x00,
"9 ",
	0x00,0x00,0x7C,0x00,0xC6,0x00,0xC6,0x00,
	0xC6,0x00,0x7E,0x00,0x06,0x00,0x06,0x00,
	0x06,0x00,0x0C,0x00,0x78,0x00,0x00,0x00,
". ",
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x18,0x00,0x18,0x00,0x00,0x00,
"A ", //11
	0x00,0x00,0x10,0x00,0x38,0x00,0x6C,0x00,
	0xC6,0x00,0xC6,0x00,0xFE,0x00,0xC6,0x00,
	0xC6,0x00,0xC6,0x00,0xC6,0x00,0x00,0x00,
"B ",
	0x00,0x00,0xFC,0x00,0x66,0x00,0x66,0x00,
	0x66,0x00,0x7C,0x00,0x66,0x00,0x66,0x00,
	0x66,0x00,0x66,0x00,0xFC,0x00,0x00,0x00,
"C ",
	0x00,0x00,0x3C,0x00,0x66,0x00,0xC2,0x00,
	0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,
	0xC2,0x00,0x66,0x00,0x3C,0x00,0x00,0x00,
"D ",
	0x00,0x00,0xF8,0x00,0x6C,0x00,0x66,0x00,
	0x66,0x00,0x66,0x00,0x66,0x00,0x66,0x00,
	0x66,0x00,0x6C,0x00,0xF8,0x00,0x00,0x00,
"m ",
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0xEC,0x00,0xFE,0x00,0xD6,0x00,0xD6,0x00,
	0xD6,0x00,0xD6,0x00,0xD6,0x00,0x00,0x00,
"t ",
	0x00,0x00,0x10,0x00,0x30,0x00,0x30,0x00,
	0xFC,0x00,0x30,0x00,0x30,0x00,0x30,0x00,
	0x30,0x00,0x36,0x00,0x1C,0x00,0x00,0x00,
"% ", //18
	0x00,0x00,0x00,0x00,0x00,0x00,0xC2,0x00,
	0xC6,0x00,0x0C,0x00,0x18,0x00,0x30,0x00,
	0x60,0x00,0xC6,0x00,0x86,0x00,0x00,0x00,
"( ",
	0x00,0x00,0x0C,0x00,0x18,0x00,0x30,0x00,
	0x30,0x00,0x30,0x00,0x30,0x00,0x30,0x00,
	0x30,0x00,0x18,0x00,0x0C,0x00,0x00,0x00,
") ",
	0x00,0x00,0x30,0x00,0x18,0x00,0x0C,0x00,
	0x0C,0x00,0x0C,0x00,0x0C,0x00,0x0C,0x00,
	0x0C,0x00,0x18,0x00,0x30,0x00,0x00,0x00,
"ËÉ", //20
	0x20,0x00,0x22,0x80,0x22,0x80,0xFA,0x40,
	0x24,0x40,0x65,0x20,0xB5,0x10,0xAA,0x00,
	0x22,0x80,0x24,0x40,0x2F,0xE0,0x20,0x20,

"ºÏ", 0x04,0x00,0x06,0x00,0x09,0x00,0x10,0x80,
      0x20,0x40,0xDF,0xB0,0x00,0x00,0x1F,0xC0,
      0x10,0x40,0x10,0x40,0x1F,0xC0,0x10,0x40,
	  //22
"Õ¢", 0x20,0x20,0x17,0xF0,0x40,0x20,0x5F,0xA0,
      0x54,0xA0,0x5F,0xA0,0x54,0xA0,0x5F,0xA0,
      0x44,0x20,0x44,0x20,0x44,0xA0,0x40,0x60,

"×Ô", 0x02,0x00,0x04,0x40,0x3F,0xE0,0x20,0x40,
      0x20,0x40,0x3F,0xC0,0x20,0x40,0x20,0x40,
      0x3F,0xC0,0x20,0x40,0x3F,0xC0,0x20,0x40,

"¶¯", 0x00,0x80,0x78,0x80,0x00,0x80,0x03,0xF0,
      0xFC,0x90,0x10,0x90,0x20,0x90,0x49,0x10,
      0xFD,0x10,0x42,0x10,0x04,0x50,0x18,0x20,

"¸ú", 0x00,0x20,0x7B,0xF0,0x4A,0x20,0x4B,0xE0,
      0x7A,0x20,0x13,0xE0,0x5A,0x20,0x53,0x40,
      0x52,0x80,0x7A,0x40,0xC3,0x30,0x02,0x20,
	  //26
"×Ù", 0x11,0x00,0xF8,0x80,0x97,0xF0,0x94,0x10,
      0xF3,0xC0,0x20,0x20,0xB7,0xF0,0xA0,0x80,
      0xA2,0xC0,0xB4,0xA0,0xC8,0x90,0x01,0x80,
	  //27
"×ù", 0x02,0x20,0x7F,0xF0,0x42,0x00,0x4A,0x40,
      0x4A,0x40,0x4A,0xA0,0x57,0x10,0x62,0x40,
      0x5F,0xE0,0x42,0x00,0x82,0x00,0xBF,0xF0,

"Î»", 0x12,0x00,0x11,0x40,0x2F,0xF0,0x20,0x00,
      0x64,0x40,0xA4,0x40,0x22,0x40,0x22,0x40,
      0x22,0x80,0x22,0x80,0x20,0x80,0x2F,0xF0,

"ÒÆ", 0x19,0x00,0xE1,0xE0,0x22,0x20,0x25,0x40,
      0xF8,0x80,0x23,0x00,0x71,0xF0,0xAA,0x10,
      0xA5,0xA0,0x20,0x40,0x20,0x80,0x27,0x00,

"¼ä", 0x20,0x20,0x17,0xF0,0x40,0x20,0x4F,0x20,
      0x49,0x20,0x4F,0x20,0x49,0x20,0x49,0x20,
      0x4F,0x20,0x48,0x20,0x40,0xA0,0x40,0x60,

"Ï¶", 0x01,0x00,0xF5,0x20,0x95,0x10,0xAF,0xE0,
      0xC4,0x20,0xA7,0xE0,0x94,0x20,0xD7,0xE0,
      0xA5,0x00,0x89,0x60,0x91,0x10,0x83,0x00,

"ÐÐ", 0x10,0x40,0x27,0xE0,0xD0,0x00,0x10,0x00,
      0x2F,0xF0,0x60,0x40,0xA0,0x40,0x20,0x40,
      0x20,0x40,0x20,0x40,0x22,0x40,0x21,0x80,

"³Ì", 0x1B,0xE0,0xE2,0x20,0x22,0x20,0xFB,0xE0,
      0x20,0x00,0x67,0xF0,0x70,0x80,0xA8,0x80,
      0xA3,0xE0,0x20,0x80,0x20,0xA0,0x2F,0xF0,

"Ñ¹", 0x00,0x20,0x3F,0xF0,0x20,0x00,0x22,0x00,
      0x22,0x40,0x2F,0xE0,0x22,0x00,0x22,0x80,
      0x42,0x40,0x42,0x20,0x82,0x00,0xBF,0xF0,

"Á¦", 0x04,0x00,0x04,0x00,0x04,0x20,0x7F,0xF0,
      0x04,0x20,0x04,0x20,0x04,0x20,0x04,0x20,
      0x08,0x20,0x10,0x20,0x21,0x40,0xC0,0x80,

"Õý", 0x00,0x20,0x7F,0xF0,0x02,0x00,0x02,0x00,
      0x22,0x40,0x23,0xE0,0x22,0x00,0x22,0x00,
      0x22,0x00,0x22,0x00,0x22,0x20,0xFF,0xF0,

"Ä¥", 0x02,0x00,0x7F,0xF0,0x48,0x80,0x7F,0xF0,
      0x5A,0xC0,0x6A,0xA0,0x40,0x00,0x7F,0xE0,
      0x48,0x00,0x5F,0xC0,0xA8,0x40,0x8F,0xC0,

"Ëð", 0x27,0xE0,0x24,0x20,0xFC,0x20,0x27,0xE0,
      0x20,0x00,0x37,0xE0,0xE4,0x20,0x25,0x20,
      0x25,0x20,0x21,0x80,0xA6,0x40,0x58,0x30,

"Æ£", 0x02,0x20,0x3F,0xF0,0xA0,0x00,0x61,0x00,
      0x2F,0xF0,0x29,0x20,0x6F,0xC0,0xAC,0x40,
      0x2A,0x80,0x49,0x00,0x52,0xC0,0xAC,0x30,

"ÀÍ", 0x09,0x00,0xFF,0xF0,0x09,0x00,0x00,0x00,
      0x7F,0xF0,0x44,0x10,0x84,0x20,0x3F,0xC0,
      0x08,0x40,0x08,0x40,0x12,0x40,0x61,0x80,

"ºÁ", 0x04,0x40,0x7F,0xE0,0x00,0x00,0x1F,0x80,
      0x10,0x80,0x7F,0xF0,0x80,0x10,0x3F,0xC0,
      0x04,0x00,0xFF,0xE0,0x04,0x10,0x03,0xF0,

"Ã×", 0x02,0x00,0x22,0x40,0x12,0x80,0x13,0x20,
      0x7F,0xF0,0x0A,0x00,0x0B,0x00,0x12,0x80,
      0x22,0x40,0x42,0x30,0x82,0x00,0x02,0x00,

"¶Ö", 0x01,0x00,0xF1,0x20,0x9F,0xF0,0x91,0x00,
      0x95,0x20,0x95,0x20,0x95,0x20,0xF7,0xE0,
      0x95,0x20,0x81,0x10,0x01,0x10,0x00,0xF0,

"L ",
	0x00,0x00,0xF0,0x00,0x60,0x00,0x60,0x00,
	0x60,0x00,0x60,0x00,0x60,0x00,0x60,0x00,
	0x62,0x00,0x66,0x00,0xFE,0x00,0x00,0x00,

"R ",
	0x00,0x00,0xFC,0x00,0x66,0x00,0x66,0x00,
	0x66,0x00,0x7C,0x00,0x6C,0x00,0x66,0x00,
	0x66,0x00,0x66,0x00,0xE6,0x00,0x00,0x00,
"³õÊ", 
	0x20,0x00,0x10,0x20,0xFB,0xF0,0x11,0x20,
	0x25,0x20,0x69,0x20,0xB1,0x20,0x29,0x20,
	0x22,0x20,0x22,0x20,0x24,0xA0,0x28,0x40,

"Ê¼", 
	0x21,0x00,0x21,0x00,0x22,0x40,0xFA,0x20,
	0x2F,0xF0,0x28,0x10,0x4B,0xE0,0x52,0x20,
	0x52,0x20,0x32,0x20,0x4B,0xE0,0x82,0x20,
};


// ºº×Ö±í£º
// 0-9		: 0-9
// 10-19	: ABCDmt%()
// 20-29	: ËÉºÏÕ¢×Ô¶¯¸ú×Ù×ùÎ»ÒÆ
// 30-39	: ¼äÏ¶ÐÐ³ÌÑ¹Á¦ÕýÄ¥ËðÆ£
// 40-47	: ÀÍºÁÃ×¶ÖLR³õÊ¼

/* convert a decimal number into a binary string (int b_num[])
 * idx: show the digit place (initialized to be 7) @ change from 7 -> 0
 */
void dtb_r(int d_num, int b_num[], int idx)
{
	if (idx < 0)
		return;
	if (d_num % 2 != 0)
		b_num[idx] = 1;
	dtb_r(d_num / 2, b_num, idx - 1);
}

/* put a word with its num in the list on (x,y) */
void putWord(int x, int y, int num)
{
	bool word_t[WORDLEN * 8];
	struct typFNT_GB12 word = GB_12[num];
	unsigned char msk[WORDLEN];// when cast char to int, whether it is unsigned counts
	
	for (int i = 0; i < WORDLEN; i++){
		msk[i] = word.Msk[i];
	}

	for (int i = 0; i < WORDLEN; i++){
//		int d = msk[i];
		int b_num[8];

		for (int j = 0; j < 8; j++)
			b_num[j] = 0;

		dtb_r(msk[i], b_num, 7);
		int temp_i = i * 8;
		for (int j = 0; j < 8; j++){
			if (b_num[j] == 1)
				word_t[temp_i + j] = true;
			else
				word_t[temp_i + j] = false;
		}
	}

	for (int i = 0; i < WORDLEN * 8; i++){
		if (word_t[i])
			putpixel(x + i % 16, y + i / 16, BLACK);
	}
}

/* putNumber: (x,y) value -> print the value at (x,y) */
void putNumber(int x, int y, char *val)
{
	int len = getStringLength(val);
	for (int i = 0; i < len; i++){
		if (val[i] == '.')
			putWord(x + 7 * i, y, 10);
		else
			putWord(x + 7 * i, y, val[i] - 48);
	}
}

